#!/usr/bin/env python

"""USAGE: tab2table.py {FILENAME}

Takes tab-seperated input from all files given (if none, stdin is used),
and outputs space-padded output such that each column lines up,
with a minimum seperation of 4 spaces.
Special filename '-' is interpreted as stdin.

Flags:
	-h --help Display this message
"""

import sys



def printhelp():
	print __doc__
	sys.exit(1)


def main(*argv):
	flags = {'-h': printhelp, '--help': printhelp}
	for arg in argv:
		if arg in flags:
			argv.pop(arg)
			flags[arg]()

	if not argv:
		argv = ['-']
	files = [sys.stdin if path == '-' else open(path) for path in argv]
	text = ''.join([f.read() for f in files])

	tabwidth = 4

	widths = [] # list of column widths

	if not text:
		return
	if text[-1] == '\n':
		text = text[:-1] # strip final newline to avoid [proper lines, ..., '']
	lines = text.split('\n')
	for line in lines:
		parts = line.split('\t')
		for column, value in enumerate(parts):
			# pad widths up to column number
			while column >= len(widths):
				widths.append(tabwidth)
			if len(value) + tabwidth > widths[column]:
				widths[column] = len(value) + tabwidth

	for line in lines:
		for width, value in zip(widths, line.split('\t')):
			sys.stdout.write(value + ' ' * (width - len(value)))
		sys.stdout.write('\n')


if __name__ == '__main__':
	main(*sys.argv[1:])
