#!/bin/env python

import sys
import os
from subprocess import check_call as cmd
from subprocess import check_output as cmd_out
from simplejson import loads

topdir = cmd_out(['git', 'rev-parse', '--show-toplevel'])
try:
	with open(os.path.join(topdir, '.gitreview')) as f: out = f.read()
except (OSError, IOError):
	project = os.path.basename(topdir)
else:
	matched_lines = [line for line in out.split('\n') if line.strip().startswith('project=')]
	if len(matched_lines) != 1:
		raise Exception("Couldn't determine gerrit project")
	_, project = matched_lines[0].split('=', 1)

out = cmd_out(['ssh', 'pd', 'gerrit', 'query', '--format=JSON', '--current-patch-set',
               'project:%s' % project, 'status:open'])
objects = out.split('\n')
objects = [loads(o) for o in objects if o]
changes = {o['number']: o['currentPatchSet']['ref'] for o in objects if 'number' in o}

fetch_args = [':'.join([commit, "refs/changes/%s" % change_id]) for change_id, commit in changes.items()]
for fetch_arg in fetch_args:
	print ' '.join(['git', 'fetch', '-f', 'origin', fetch_arg])
	cmd(['git', 'fetch', '-f', 'origin', fetch_arg])
